{
  "version": 3,
  "sources": ["../../@wagmi/core/dist/providers/alchemy.js"],
  "sourcesContent": ["import \"../chunk-MQXBDTVK.js\";\n\n// src/providers/alchemy.ts\nimport { providers } from \"ethers\";\nfunction alchemyProvider({\n  apiKey,\n  priority,\n  stallTimeout,\n  weight\n}) {\n  return function(chain) {\n    if (!chain.rpcUrls.alchemy?.http[0])\n      return null;\n    return {\n      chain: {\n        ...chain,\n        rpcUrls: {\n          ...chain.rpcUrls,\n          default: { http: [`${chain.rpcUrls.alchemy?.http[0]}/${apiKey}`] }\n        }\n      },\n      provider: () => {\n        const provider = new providers.AlchemyProvider(\n          {\n            chainId: chain.id,\n            name: chain.network,\n            ensAddress: chain.contracts?.ensRegistry?.address\n          },\n          apiKey\n        );\n        return Object.assign(provider, { priority, stallTimeout, weight });\n      },\n      webSocketProvider: () => new providers.AlchemyWebSocketProvider(\n        {\n          chainId: chain.id,\n          name: chain.network,\n          ensAddress: chain.contracts?.ensRegistry?.address\n        },\n        apiKey\n      )\n    };\n  };\n}\nexport {\n  alchemyProvider\n};\n"],
  "mappings": ";;;;;;;;;AAGA;AACA,SAAS,gBAAgB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,SAAO,SAAS,OAAO;AAVzB;AAWI,QAAI,GAAC,WAAM,QAAQ,YAAd,mBAAuB,KAAK;AAC/B,aAAO;AACT,WAAO;AAAA,MACL,OAAO;AAAA,QACL,GAAG;AAAA,QACH,SAAS;AAAA,UACP,GAAG,MAAM;AAAA,UACT,SAAS,EAAE,MAAM,CAAC,IAAG,WAAM,QAAQ,YAAd,mBAAuB,KAAK,MAAM,QAAQ,EAAE;AAAA,QACnE;AAAA,MACF;AAAA,MACA,UAAU,MAAM;AArBtB,YAAAA,KAAAC;AAsBQ,cAAM,WAAW,IAAI,YAAU;AAAA,UAC7B;AAAA,YACE,SAAS,MAAM;AAAA,YACf,MAAM,MAAM;AAAA,YACZ,aAAYA,OAAAD,MAAA,MAAM,cAAN,gBAAAA,IAAiB,gBAAjB,gBAAAC,IAA8B;AAAA,UAC5C;AAAA,UACA;AAAA,QACF;AACA,eAAO,OAAO,OAAO,UAAU,EAAE,UAAU,cAAc,OAAO,CAAC;AAAA,MACnE;AAAA,MACA,mBAAmB,MAAG;AAhC5B,YAAAD,KAAAC;AAgC+B,mBAAI,YAAU;AAAA,UACrC;AAAA,YACE,SAAS,MAAM;AAAA,YACf,MAAM,MAAM;AAAA,YACZ,aAAYA,OAAAD,MAAA,MAAM,cAAN,gBAAAA,IAAiB,gBAAjB,gBAAAC,IAA8B;AAAA,UAC5C;AAAA,UACA;AAAA,QACF;AAAA;AAAA,IACF;AAAA,EACF;AACF;",
  "names": ["_a", "_b"]
}
